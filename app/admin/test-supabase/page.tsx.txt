"use client"

import { useState, useEffect } from "react"
import { createClient } from "@supabase/supabase-js"
import Link from "next/link"

export default function TestSupabasePage() {
  const [status, setStatus] = useState<"loading" | "success" | "error">("loading")
  const [message, setMessage] = useState("")
  const [supabaseUrl, setSupabaseUrl] = useState("")
  const [supabaseKey, setSupabaseKey] = useState("")

  useEffect(() => {
    // Try to get environment variables
    const url = process.env.NEXT_PUBLIC_SUPABASE_URL
    const key = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY

    if (url) setSupabaseUrl(url)
    if (key) setSupabaseKey(key)

    setStatus("loading")
    setMessage("Checking environment variables...")
  }, [])

  const testConnection = async () => {
    if (!supabaseUrl || !supabaseKey) {
      setStatus("error")
      setMessage("Please enter your Supabase URL and anon key")
      return
    }

    setStatus("loading")
    setMessage("Testing connection to Supabase...")

    try {
      const supabase = createClient(supabaseUrl, supabaseKey)

      // Test authentication service
      const { data: authData, error: authError } = await supabase.auth.getSession()

      if (authError) {
        setStatus("error")
        setMessage(`Auth error: ${authError.message}`)
        return
      }

      // Test database query
      const { error: queryError } = await supabase.from("subscribers").select("count", { count: "exact", head: true })

      if (queryError) {
        // If it's a CORS error, it will typically mention "fetch" or "network"
        if (
          queryError.message.includes("fetch") ||
          queryError.message.includes("network") ||
          queryError.message.includes("CORS")
        ) {
          setStatus("error")
          setMessage(
            `CORS error: ${queryError.message}. You need to add your domain to the allowed origins in Supabase.`,
          )
        } else if (queryError.code === "PGRST301") {
          setStatus("error")
          setMessage("Table 'subscribers' does not exist. Please create the required tables.")
        } else {
          setStatus("error")
          setMessage(`Database error: ${queryError.message}`)
        }
        return
      }

      setStatus("success")
      setMessage("Successfully connected to Supabase!")
    } catch (error) {
      setStatus("error")
      setMessage(`Connection error: ${error instanceof Error ? error.message : String(error)}`)
    }
  }

  return (
    <div className="min-h-screen bg-black text-white p-4">
      <div className="max-w-3xl mx-auto">
        <Link href="/admin/login" className="inline-block mb-8 hover:text-gray-400 transition-colors">
          ← Back to login
        </Link>

        <h1 className="text-4xl font-bold mb-8">Supabase Connection Test</h1>

        <div className="space-y-8">
          <div className="p-6 bg-zinc-900 rounded-lg">
            <h2 className="text-2xl font-semibold mb-4">Supabase Credentials</h2>
            <div className="space-y-4">
              <div>
                <label htmlFor="supabase-url" className="block text-sm font-medium mb-1">
                  Supabase URL
                </label>
                <input
                  id="supabase-url"
                  type="text"
                  value={supabaseUrl}
                  onChange={(e) => setSupabaseUrl(e.target.value)}
                  placeholder="https://your-project-id.supabase.co"
                  className="w-full p-2 bg-zinc-800 border border-zinc-700 rounded-md text-white"
                />
              </div>
              <div>
                <label htmlFor="supabase-key" className="block text-sm font-medium mb-1">
                  Supabase Anon Key
                </label>
                <input
                  id="supabase-key"
                  type="text"
                  value={supabaseKey}
                  onChange={(e) => setSupabaseKey(e.target.value)}
                  placeholder="your-anon-key"
                  className="w-full p-2 bg-zinc-800 border border-zinc-700 rounded-md text-white"
                />
              </div>
              <button onClick={testConnection} className="px-4 py-2 bg-white text-black rounded-md hover:bg-gray-200">
                Test Connection
              </button>
            </div>
          </div>

          <div className="p-6 bg-zinc-900 rounded-lg">
            <h2 className="text-2xl font-semibold mb-4">Connection Status</h2>
            <div
              className={`p-4 rounded-md ${
                status === "loading"
                  ? "bg-yellow-900/30 text-yellow-300"
                  : status === "success"
                    ? "bg-green-900/30 text-green-300"
                    : "bg-red-900/30 text-red-300"
              }`}
            >
              {status === "loading" && (
                <div className="flex items-center">
                  <div className="animate-spin rounded-full h-4 w-4 border-t-2 border-b-2 border-current mr-2"></div>
                  <span>{message}</span>
                </div>
              )}
              {status === "success" && <p>{message}</p>}
              {status === "error" && <p>{message}</p>}
            </div>
          </div>

          <div className="p-6 bg-zinc-900 rounded-lg">
            <h2 className="text-xl font-semibold mb-2">Troubleshooting</h2>
            <div className="space-y-4 mt-4">
              <div>
                <h3 className="font-medium">CORS Issues</h3>
                <p className="text-sm text-gray-400 mt-1">
                  Supabase requires your domain to be in the allowed origins list. This is now found in:
                </p>
                <ol className="list-decimal pl-5 text-sm text-gray-400 mt-2">
                  <li>Project Settings → API → CORS (older interface)</li>
                  <li>Authentication → URL Configuration → CORS (newer interface)</li>
                  <li>Project Settings → API → Client API Settings → CORS (newest interface)</li>
                </ol>
                <p className="text-sm text-gray-400 mt-2">
                  Add <code className="bg-black px-1 rounded">http://localhost:3000</code> for local development
                </p>
              </div>

              <div>
                <h3 className="font-medium">Database Tables</h3>
                <p className="text-sm text-gray-400 mt-1">Make sure your database has the required tables:</p>
                <ul className="list-disc pl-5 text-sm text-gray-400 mt-2">
                  <li>subscribers</li>
                  <li>admin_users</li>
                </ul>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  }